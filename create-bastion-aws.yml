- name: Create Bastion Host
  hosts: localhost
  gather_facts: no
  connection: local
  vars:
  tasks:
    - name: Launch instances
      ec2:
         key_name: "{{ keypair }}"
         state: present
         group_id: "{{ security_group_id }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ vpc_subnet_id}}"
         assign_public_ip: yes
         instance_tags:
             env_id: "{{ env_id }}"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

    - name: set_dns_record
      route53:
        state: present
        record: "{{ instance_names }}.{{ dns_zone}}"
        command: create
        zone: "{{ dns_zone}}"
        type: A
        value: "{{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"

- name: Manage new instances
  hosts: new_instances
  connection: ssh
  sudo: True
  tasks:
    - name: Install base packages
      yum: name={{ item }} state=installed
      with_items:
        - subscription-manager
        - ansible
        - mlocate
        - python27-python-pip
        - git
        - python-libcloud
        - qemu-img
        - wget
      tags:
        - packages
      ignore_errors: yes

    - name: Creates Galaxy directory
      file:
        path: "~/roles/"
        state: directory
        owner: awx
        group: awx
        mode: 0775

    - name: Enable new Galaxy file
      file:
        path: "~/roles/requirements.yml"
        state: touch
        mode: 0660
        owner: awx

    - name: Ansible create file with content example
      copy:
        dest: "~/roles/requirements.yml"
        content: |
          #Install a role from the Ansible Galaxy
          - src: wtanaka.gcloud-sdk

    - name: Install Gcloud
      command: ansible-galaxy install -r ~/roles/requirements.yml -p ./roles/ --force
      register: ansible-galaxy
      roles:
         - role: wtanaka.gcloud-sdk

    - name: Install PIP
      command: easy_install pip
      register: pip-install

    - name: Install Ansible Tower CLI
      command: pip install ansible-tower-cli
      register: ansible-tower-cli

    - name: Install Apache Libcloud
      command: pip install apache-libcloud
      register: apache-libcloud
